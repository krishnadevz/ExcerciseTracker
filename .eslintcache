[{"/home/krishnadevz/excercise/src/components/create-excercise.component.js":"1","/home/krishnadevz/excercise/src/components/edit-excercise.component.js":"2","/home/krishnadevz/excercise/src/components/create-user.component.js":"3","/home/krishnadevz/excercise/src/components/navbar.component.js":"4","/home/krishnadevz/excercise/src/components/excercises-list.component.js":"5"},{"size":3594,"mtime":1614402792003,"results":"6","hashOfConfig":"7"},{"size":4030,"mtime":1614403855181,"results":"8","hashOfConfig":"7"},{"size":1360,"mtime":1614338042183,"results":"9","hashOfConfig":"7"},{"size":957,"mtime":1614247775430,"results":"10","hashOfConfig":"7"},{"size":2014,"mtime":1614404104099,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131vtx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/krishnadevz/excercise/src/components/create-excercise.component.js",[],"/home/krishnadevz/excercise/src/components/edit-excercise.component.js",["23"],"/home/krishnadevz/excercise/src/components/create-user.component.js",[],"/home/krishnadevz/excercise/src/components/navbar.component.js",[],"/home/krishnadevz/excercise/src/components/excercises-list.component.js",["24","25"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditExercise from \"./edit-excercise.component\";\n\nexport default class ExercisesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteExercise = this.deleteExercise.bind(this);\n\n    this.state = {\n      exercises: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/exercises\")\n      .then((response) => {\n        this.setState({\n          exercises: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // to delete exercises\n  deleteExercise(id) {\n    axios\n      .delete(\"http://localhost:5000/exercises/\" + id)\n      .then((res) => console.log(res.data));\n\n    this.setState({\n      exercises: this.state.exercises.filter((el) => el._id !== id),\n    });\n  }\n\n  // to get all the exercises\n  exerciseList() {\n    return this.state.exercises.map((currentExercise) => {\n      return (\n        <tr>\n          <td>{currentExercise.username}</td>\n          <td>{currentExercise.description}</td>\n          <td>{currentExercise.duration}</td>\n          <td>{currentExercise.date.substring(0, 10)}</td>\n          <td>\n            <Link to={\"/edit/\" + currentExercise._id}>edit</Link> |{\" \"}\n            <a\n              href=\"#\"\n              onClick={() => {\n                this.deleteExercise(currentExercise._id);\n              }}\n            >\n              delete\n            </a>\n          </td>\n        </tr>\n      );\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h3>Logged Exercises</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Username</th>\n              <th>Description</th>\n              <th>Duration</th>\n              <th>Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.exerciseList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n",{"ruleId":"26","severity":1,"message":"27","line":4,"column":10,"nodeType":"28","messageId":"29","endLine":4,"endColumn":21},{"ruleId":"26","severity":1,"message":"30","line":4,"column":8,"nodeType":"28","messageId":"29","endLine":4,"endColumn":20},{"ruleId":"31","severity":1,"message":"32","line":52,"column":13,"nodeType":"33","endLine":57,"endColumn":14},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'EditExercise' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]